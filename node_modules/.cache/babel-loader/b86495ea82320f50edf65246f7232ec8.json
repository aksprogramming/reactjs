{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react/spa/src/components/login.component.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoadingScreen from 'react-loading-screen';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    const domain = process.env.REACT_APP_NOT_SECRET_CODE;\n    this.state = {\n      domain: domain,\n      loading: true,\n      formValid: false,\n      email: \"\",\n      password: \"\",\n      errors: {\n        password: '',\n        email: '',\n        common: ''\n      }\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  onTodoChange(event) {\n    let target = event.target;\n    const value = target.value;\n    const name = target.name; // eslint-disable-next-line        \n\n    switch (name) {\n      case 'email':\n        // eslint-disable-next-line\n        this.state.email = value;\n\n        if (value === '') {\n          // eslint-disable-next-line\n          this.state.errors.email = 'Email is required';\n        } else {\n          let emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n\n          if (emailValid) {\n            // eslint-disable-next-line\n            this.state.errors.email = '';\n          } else {\n            // eslint-disable-next-line\n            this.state.errors.email = 'Email is invalid';\n          }\n        }\n\n        break;\n\n      case 'password':\n        // eslint-disable-next-line\n        this.state.password = value;\n\n        if (value === '') {\n          // eslint-disable-next-line\n          this.state.errors.password = 'Password is required';\n        } else {\n          // eslint-disable-next-line\n          let password = value.match('^[a-zA-Z0-9!@#\\$%\\^&]{8,}$');\n\n          if (password) {\n            // eslint-disable-next-line\n            this.state.errors.password = ''; //                         password = value.match('^(?=.*[0-9])(?=.{8,})');\n            //                            if(password){\n            // // eslint-disable-next-line\n            //                                 this.state.errors.password = '';\n            //                             }else{\n            // // eslint-disable-next-line\n            //                                 this.state.errors.password = 'Contains a number';\n            //                             }\n          } else {\n            // eslint-disable-next-line\n            this.state.errors.password = 'At least 8 characters';\n          }\n        }\n\n        break;\n    } // eslint-disable-next-line\n\n\n    if (this.state.errors.email != '' || this.state.errors.password != '') {\n      this.flag = 1;\n    } else {\n      this.flag = 0;\n    }\n\n    if (this.flag === 1) {\n      // eslint-disable-next-line\n      this.state.formValid = false;\n    } else {\n      // eslint-disable-next-line\n      this.state.formValid = true;\n    } // eslint-disable-next-line\n\n\n    this.forceUpdate();\n  }\n\n  handleLogin(event) {\n    // eslint-disable-next-line\n    this.state.loading = true;\n    this.forceUpdate();\n    event.preventDefault();\n    let email = event.target.email.value;\n    let password = event.target.password.value;\n    var formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    event.preventDefault();\n    fetch(this.state.domain + \"api/v1/login\", {\n      method: \"POST\",\n      header: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: formData\n    }).then(res => res.json()).then(result => {\n      // console.log(result);\n      if (result.error) {\n        // eslint-disable-next-line\n        this.state.errors.password = \"Invalid email or password.\";\n      }\n\n      if (result.success) {\n        this.props.history.push(\"/Dashboard\");\n      } // eslint-disable-next-line         \n\n\n      this.state.loading = false;\n      this.forceUpdate();\n    }, error => {});\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line   \n    this.state.loading = false;\n    this.forceUpdate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(LoadingScreen, {\n      loading: this.state.loading,\n      bgColor: \"#f1f1f1\",\n      spinnerColor: \"#9ee5f8\",\n      textColor: \"#676767\",\n      text: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleLogin,\n      method: \"post\",\n      hidden: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Login to your account\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter email\",\n      onBlur: e => this.onTodoChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.errors.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Enter password\",\n      onBlur: e => this.onTodoChange(e),\n      onChange: e => this.onTodoChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.errors.password)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"p\", {\n      className: \"forgot-password text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"forgot-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Don\\u2019t have an account? \", React.createElement(Link, {\n      to: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Register your business\"))));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react/spa/src/components/login.component.js"],"names":["React","Component","Link","LoadingScreen","Login","constructor","props","domain","process","env","REACT_APP_NOT_SECRET_CODE","state","loading","formValid","email","password","errors","common","handleLogin","bind","onTodoChange","event","target","value","name","emailValid","match","flag","forceUpdate","preventDefault","formData","FormData","append","fetch","method","header","body","then","res","json","result","error","success","history","push","componentDidMount","render","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,IAAV,QAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,UAAMC,MAAM,GAACC,OAAO,CAACC,GAAR,CAAYC,yBAAzB;AACA,SAAKC,KAAL,GAAa;AACLJ,MAAAA,MAAM,EAACA,MADF;AAELK,MAAAA,OAAO,EAAC,IAFH;AAGLC,MAAAA,SAAS,EAAC,KAHL;AAILC,MAAAA,KAAK,EAAE,EAJF;AAKLC,MAAAA,QAAQ,EAAC,EALJ;AAMLC,MAAAA,MAAM,EAAE;AACRD,QAAAA,QAAQ,EAAE,EADF;AAERD,QAAAA,KAAK,EAAC,EAFE;AAGRG,QAAAA,MAAM,EAAC;AAHC;AANH,KAAb;AAYA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACEC,EAAAA,YAAY,CAACC,KAAD,EAAO;AAClB,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,UAAMC,KAAK,GAACD,MAAM,CAACC,KAAnB;AACA,UAAMC,IAAI,GAACF,MAAM,CAACE,IAAlB,CAHkB,CAI1B;;AACQ,YAAOA,IAAP;AAEI,WAAK,OAAL;AACZ;AACgB,aAAKb,KAAL,CAAWG,KAAX,GAAiBS,KAAjB;;AACA,YAAGA,KAAK,KAAG,EAAX,EAAc;AAC9B;AACoB,eAAKZ,KAAL,CAAWK,MAAX,CAAkBF,KAAlB,GAA0B,mBAA1B;AACH,SAHD,MAGK;AACA,cAAIW,UAAU,GAAGF,KAAK,CAACG,KAAN,CAAY,sCAAZ,CAAjB;;AACA,cAAGD,UAAH,EAAc;AACnC;AACwB,iBAAKd,KAAL,CAAWK,MAAX,CAAkBF,KAAlB,GAA0B,EAA1B;AACF,WAHD,MAGK;AAC1B;AACwB,iBAAKH,KAAL,CAAWK,MAAX,CAAkBF,KAAlB,GAA0B,kBAA1B;AACF;AAEL;;AAEL;;AACA,WAAK,UAAL;AACZ;AACgB,aAAKH,KAAL,CAAWI,QAAX,GAAoBQ,KAApB;;AACA,YAAGA,KAAK,KAAG,EAAX,EAAc;AAC9B;AACoB,eAAKZ,KAAL,CAAWK,MAAX,CAAkBD,QAAlB,GAA6B,sBAA7B;AACH,SAHD,MAGK;AACD;AACC,cAAIA,QAAQ,GAAGQ,KAAK,CAACG,KAAN,CAAY,4BAAZ,CAAf;;AACA,cAAGX,QAAH,EAAY;AACjC;AACwB,iBAAKJ,KAAL,CAAWK,MAAX,CAAkBD,QAAlB,GAA6B,EAA7B,CAFS,CAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsB,WAXD,MAWK;AAC1B;AACwB,iBAAKJ,KAAL,CAAWK,MAAX,CAAkBD,QAAlB,GAA6B,uBAA7B;AACF;AAEL;;AAEL;AAhDJ,KALkB,CAyD1B;;;AACQ,QAAG,KAAKJ,KAAL,CAAWK,MAAX,CAAkBF,KAAlB,IAAyB,EAAzB,IAA6B,KAAKH,KAAL,CAAWK,MAAX,CAAkBD,QAAlB,IAA4B,EAA5D,EAAgE;AAAC,WAAKY,IAAL,GAAU,CAAV;AAAa,KAA9E,MACI;AAAC,WAAKA,IAAL,GAAU,CAAV;AAAa;;AAClB,QAAG,KAAKA,IAAL,KAAY,CAAf,EAAiB;AACzB;AACY,WAAKhB,KAAL,CAAWE,SAAX,GAAqB,KAArB;AACH,KAHD,MAGK;AACb;AACY,WAAKF,KAAL,CAAWE,SAAX,GAAqB,IAArB;AACH,KAlEiB,CAmE1B;;;AACQ,SAAKe,WAAL;AACH;;AACCV,EAAAA,WAAW,CAACG,KAAD,EAAO;AACxB;AACQ,SAAKV,KAAL,CAAWC,OAAX,GAAmB,IAAnB;AACA,SAAKgB,WAAL;AACAP,IAAAA,KAAK,CAACQ,cAAN;AACA,QAAIf,KAAK,GAACO,KAAK,CAACC,MAAN,CAAaR,KAAb,CAAmBS,KAA7B;AACA,QAAIR,QAAQ,GAACM,KAAK,CAACC,MAAN,CAAaP,QAAb,CAAsBQ,KAAnC;AACA,QAAIO,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBlB,KAAzB;AACAgB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BjB,QAA5B;AACAM,IAAAA,KAAK,CAACQ,cAAN;AACAI,IAAAA,KAAK,CAAC,KAAKtB,KAAL,CAAWJ,MAAX,GAAkB,cAAnB,EAAkC;AAAC2B,MAAAA,MAAM,EAAC,MAAR;AAAeC,MAAAA,MAAM,EAAE;AAC1D,wBAAiB,kBADyC;AAE1D,kBAAW;AAF+C,OAAvB;AAGjCC,MAAAA,IAAI,EAACN;AAH4B,KAAlC,CAAL,CAICO,IAJD,CAIMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAJX,EAKCF,IALD,CAMKG,MAAD,IAAU;AACP;AAEC,UAAGA,MAAM,CAACC,KAAV,EAAgB;AAGR;AACA,aAAK9B,KAAL,CAAWK,MAAX,CAAkBD,QAAlB,GAA2B,4BAA3B;AAKP;;AACD,UAAGyB,MAAM,CAACE,OAAV,EAAmB;AACf,aAAKpC,KAAL,CAAWqC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,OAfK,CAgBN;;;AACC,WAAKjC,KAAL,CAAWC,OAAX,GAAmB,KAAnB;AACA,WAAKgB,WAAL;AACJ,KAzBL,EA0BKa,KAAD,IAAS,CAER,CA5BL;AA8BH;;AACDI,EAAAA,iBAAiB,GAAE;AACP;AACA,SAAKlC,KAAL,CAAWC,OAAX,GAAmB,KAAnB;AACA,SAAKgB,WAAL;AACX;;AACDkB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AACG,MAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWC,OADvB;AAEG,MAAA,OAAO,EAAC,SAFX;AAGG,MAAA,YAAY,EAAC,SAHhB;AAIG,MAAA,SAAS,EAAC,SAJb;AAKG,MAAA,IAAI,EAAC,EALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EASK;AAAM,MAAA,QAAQ,EAAE,KAAKM,WAArB;AAAkC,MAAA,MAAM,EAAC,MAAzC;AAAgD,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWC,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFH,EAIG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,SAAS,EAAC,cAA3C;AAA0D,MAAA,WAAW,EAAC,aAAtE;AAAoF,MAAA,MAAM,EAAEmC,CAAC,IAAI,KAAK3B,YAAL,CAAkB2B,CAAlB,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGM;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKpC,KAAL,CAAWK,MAAX,CAAkBF,KAA5C,CAHN,CAJH,EAUG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,SAAS,EAAC,cAAjD;AAAgE,MAAA,WAAW,EAAC,gBAA5E;AAA6F,MAAA,MAAM,EAAEiC,CAAC,IAAI,KAAK3B,YAAL,CAAkB2B,CAAlB,CAA1G;AAAgI,MAAA,QAAQ,EAAEA,CAAC,IAAI,KAAK3B,YAAL,CAAkB2B,CAAlB,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKpC,KAAL,CAAWK,MAAX,CAAkBD,QAA5C,CAHJ,CAVH,EAkBG;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAA4D,MAAA,QAAQ,EAAE,CAAC,KAAKJ,KAAL,CAAWE,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBH,EAmBG;AAAG,MAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBH,EAsBG;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACuB,oBAAC,IAAD;AAAO,MAAA,EAAE,EAAE,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADvB,CAtBH,CATL,CADJ;AAsCH;;AA9KwC","sourcesContent":["import React, { Component } from \"react\";\nimport {  Link } from \"react-router-dom\";\nimport LoadingScreen from 'react-loading-screen';\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        const domain=process.env.REACT_APP_NOT_SECRET_CODE;\n        this.state = {\n                domain:domain,\n                loading:true,\n                formValid:false,\n                email: \"\",\n                password:\"\",\n                errors: {\n                password: '',\n                email:'',\n                common:'',\n            }\n        };\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n       onTodoChange(event){\n        let target = event.target;\n        const value=target.value;\n        const name=target.name;\n// eslint-disable-next-line        \n        switch(name) { \n\n            case 'email':\n// eslint-disable-next-line\n                this.state.email=value;\n                if(value===''){\n// eslint-disable-next-line\n                    this.state.errors.email = 'Email is required';\n                }else{\n                     let emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                     if(emailValid){\n// eslint-disable-next-line\n                        this.state.errors.email = '';\n                     }else{\n// eslint-disable-next-line\n                        this.state.errors.email = 'Email is invalid';\n                     }\n                     \n                }        \n               \n            break;\n            case 'password':\n// eslint-disable-next-line\n                this.state.password=value;\n                if(value===''){\n// eslint-disable-next-line\n                    this.state.errors.password = 'Password is required';\n                }else{\n                    // eslint-disable-next-line\n                     let password = value.match('^[a-zA-Z0-9!@#\\$%\\^&]{8,}$');\n                     if(password){\n// eslint-disable-next-line\n                        this.state.errors.password = '';\n//                         password = value.match('^(?=.*[0-9])(?=.{8,})');\n//                            if(password){\n// // eslint-disable-next-line\n//                                 this.state.errors.password = '';\n//                             }else{\n// // eslint-disable-next-line\n//                                 this.state.errors.password = 'Contains a number';\n//                             }\n                     }else{\n// eslint-disable-next-line\n                        this.state.errors.password = 'At least 8 characters';\n                     }\n                     \n                }        \n               \n            break;\n\n        }\n\n// eslint-disable-next-line\n        if(this.state.errors.email!=''||this.state.errors.password!='') {this.flag=1;}\n        else{this.flag=0;}\n        if(this.flag===1){\n// eslint-disable-next-line\n            this.state.formValid=false;\n        }else{\n// eslint-disable-next-line\n            this.state.formValid=true;\n        }\n// eslint-disable-next-line\n        this.forceUpdate();\n    }\n      handleLogin(event){\n// eslint-disable-next-line\n        this.state.loading=true;\n        this.forceUpdate();\n        event.preventDefault();\n        let email=event.target.email.value;\n        let password=event.target.password.value;\n        var formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"password\", password);\n        event.preventDefault();\n        fetch(this.state.domain+\"api/v1/login\",{method:\"POST\",header: {\n            'Content-Type' : 'application/json',\n            'Accept' : 'application/json',\n            },body:formData})\n        .then(res=>res.json())\n        .then(\n            (result)=>{\n               // console.log(result);\n\n                if(result.error){  \n                   \n               \n                        // eslint-disable-next-line\n                        this.state.errors.password=\"Invalid email or password.\";\n                 \n                    \n                   \n                    \n                }\n                if(result.success) {\n                    this.props.history.push(\"/Dashboard\");  \n                }\n                // eslint-disable-next-line         \n                 this.state.loading=false;\n                 this.forceUpdate();\n            },\n            (error)=>{\n               \n            }\n        )\n    }\n    componentDidMount(){\n                // eslint-disable-next-line   \n                this.state.loading=false;\n                this.forceUpdate();   \n    }\n    render() {\n        return (\n            <div>\n             <LoadingScreen\n                loading={this.state.loading}\n                bgColor='#f1f1f1'\n                spinnerColor='#9ee5f8'\n                textColor='#676767'\n                text=''\n              > \n              </LoadingScreen>\n                 <form onSubmit={this.handleLogin} method=\"post\" hidden={this.state.loading}>\n          \n                    <h3>Login to your account</h3>\n\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter email\" onBlur={e => this.onTodoChange(e)}  />\n                          <span className=\"errors\">{this.state.errors.email}</span>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Enter password\" onBlur={e => this.onTodoChange(e)} onChange={e => this.onTodoChange(e)} />\n                        <span className=\"errors\">{this.state.errors.password}</span>\n                    </div>\n\n                    \n\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={!this.state.formValid}>Login</button>\n                    <p className=\"forgot-password text-right\">\n                       \n                    </p>\n                    <p className=\"forgot-password\">\n                    Don’t have an account? <Link  to={\"/sign-up\"}>Register your business</Link>\n                    </p>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}